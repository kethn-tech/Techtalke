services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: techtalke-nginx-staging
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/staging.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - client
      - server
    networks:
      - techtalke-network

  # Backend Server
  server:
    image: ${SERVER_IMAGE:-ghcr.io/kethn-tech/techtalke-server:main}
    container_name: techtalke-server-staging
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - DATABASE_URL=${DATABASE_URL}
      - CLIENT_URL=https://staging.techtalke.app
      - REDIS_URL=${REDIS_URL}
      - PORT=4000
      - JWT_SECRET=${JWT_SECRET}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - CORS_ALLOWED_ORIGINS=https://staging.techtalke.app
    ports:
      - "4000:4000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - server_uploads:/app/uploads
      - server_logs:/app/logs
    networks:
      - techtalke-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Client
  client:
    image: ${CLIENT_IMAGE:-ghcr.io/kethn-tech/techtalke-client:main}
    container_name: techtalke-client-staging
    restart: unless-stopped
    environment:
      - VITE_APP_SERVER_URL=https://staging.techtalke.app/api
      - NODE_ENV=staging
    ports:
      - "5173:5173"
    depends_on:
      - server
    networks:
      - techtalke-network

  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: techtalke-mongodb-staging
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: techtalke_staging
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_backups:/backup
    networks:
      - techtalke-network
    command: --auth --bind_ip_all

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: techtalke-redis-staging
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - techtalke-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: techtalke-prometheus-staging
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - techtalke-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: techtalke-grafana-staging
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - techtalke-network

volumes:
  mongodb_data:
  mongodb_backups:
  redis_data:
  server_uploads:
  server_logs:
  nginx_logs:
  prometheus_data:
  grafana_data:

networks:
  techtalke-network:
    driver: bridge